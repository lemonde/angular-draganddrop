function draggableDirective(a){return{restrict:"A",link:function(b,c,d){function e(){try{return b.$eval(i)}catch(a){throw new Error("draggable-data can't be parsed by Angular : check your draggable directive invocation !")}}function f(a){a.dataTransfer.effectAllowed=h||a.dataTransfer.effectAllowed;var c=e(),d=angular.toJson(c);b.$apply(function(){l(b,{$data:c,$event:a})}),a.dataTransfer.setData("json/"+j,d),a.stopPropagation()}function g(a){var c=e();b.$apply(function(){m(b,{$data:c,$event:a})}),a.stopPropagation()}var h,i,j,k=c[0];d.$observe("effectAllowed",function(a){h=a}),d.$observe("draggableData",function(a){i=a}),d.$observe("draggableType",function(a){j=a});var l=a(d.dragStart),m=a(d.dragEnd);d.$observe("draggable",function(a){k.draggable="false"!==a}),k.addEventListener("dragstart",f),k.addEventListener("dragend",g),b.$on("$destroy",function(){k.removeEventListener("dragstart",f),k.removeEventListener("dragend",g)})}}}function dropDirective(a){return{restrict:"A",link:function(b,c,d){function e(a){if(!j(b.$eval(o),a))return!0;a.dataTransfer.dropEffect=n||a.dataTransfer.dropEffect,a.preventDefault(),p&&c.addClass(p);var e=(new Date).getTime();if(!(200>e-u)&&(u=e,d.dragOver)){var f=k(a);b.$apply(function(){q(b,{$data:f,$event:a})})}}function f(a){if(!j(b.$eval(o),a))return!0;if(a.preventDefault(),d.dragEnter){var c=k(a);b.$apply(function(){r(b,{$data:c,$event:a})})}}function g(a){if(!j(b.$eval(o),a))return!0;if(a.preventDefault(),i(),d.dragLeave){var c=k(a);b.$apply(function(){s(b,{$data:c,$event:a})})}}function h(a){var c=k(a);i(),b.$apply(function(){t(b,{$data:c,$event:a})}),a.preventDefault()}function i(){c.removeClass(p)}function j(a,b){return"boolean"==typeof a?a:"string"==typeof a?j([a],b):Array.isArray(a)?j(function(b){return b.some(function(b){return b=b.split("/"),a.some(function(a){a=a.split("/");var c=!0;return b.forEach(function(b,d){"*"!==a[d]&&b!==a[d]&&(c=!1)}),c})})},b):"function"==typeof a?a(l(b.dataTransfer.types)):!1}function k(a){var b=l(a.dataTransfer.types);return b.reduce(function(b,c){var d=a.dataTransfer.getData(c),e=c.split("/")[0];return"json"===e&&d&&(d=angular.fromJson(d)),b[c]=d,c.split("/").reduce(function(a,c){return a.push(c),b[a.join("/")]=d,a},[]),b},{})}function l(a){return Array.prototype.slice.call(a)}var m=c[0],n=d.dropEffect,o=d.dropAccept,p=d.dragOverClass,q=a(d.dragOver),r=a(d.dragEnter),s=a(d.dragLeave),t=a(d.drop);m.addEventListener("dragover",e),m.addEventListener("dragenter",f),m.addEventListener("dragleave",g),m.addEventListener("drop",h),b.$on("$destroy",function(){m.removeEventListener("dragover",e),m.removeEventListener("dragenter",f),m.removeEventListener("dragleave",g),m.removeEventListener("drop",h)});var u=0}}}angular.module("draganddrop",[]).directive("draggable",["$parse",draggableDirective]).directive("drop",["$parse",dropDirective]);
//# sourceMappingURL=angular-draganddrop.min.map